// The basic two column layout
@use "sass:meta";
@use "mixins";
@use "vars";

.side-bar {
  z-index: 0;
  display: flex;
  flex-wrap: wrap;
  background-color: var(--sidebar-color);

  @include mixins.mq(md) {
    flex-flow: column nowrap;
    position: fixed;
    width: vars.$nav-width-md;
    height: 100%;
    border-right: vars.$border var(--border-color);
    align-items: flex-end;
  }

  @include mixins.mq(lg) {
    width: calc((100% - #{vars.$nav-width + vars.$content-width}) / 2 + #{vars.$nav-width});
    min-width: vars.$nav-width;
  }

  & + .main {
    @include mixins.mq(md) {
      margin-left: vars.$nav-width-md;
    }

    @include mixins.mq(lg) {
      // stylelint-disable function-name-case
      // disable for Max(), we want to use the CSS max() function
      margin-left: Max(
        #{vars.$nav-width},
        calc((100% - #{vars.$nav-width + vars.$content-width}) / 2 + #{vars.$nav-width})
      );
      // stylelint-enable function-name-case
    }

    .main-header {
      display: none;
      background-color: var(--sidebar-color);

      @include mixins.mq(md) {
        display: flex;
        background-color: var(--body-background-color);
      }

      &.nav-open {
        display: block;

        @include mixins.mq(md) {
          display: flex;
        }
      }
    }
  }
}

.main {
  margin: auto;

  @include mixins.mq(md) {
    position: relative;
    max-width: vars.$content-width;
  }
}

.main-content-wrap {
  padding-top: vars.$gutter-spacing-sm;
  padding-bottom: vars.$gutter-spacing-sm;

  @include mixins.container;

  @include mixins.mq(md) {
    padding-top: vars.$gutter-spacing;
    padding-bottom: vars.$gutter-spacing;
  }
}

.main-header {
  z-index: 0;
  border-bottom: vars.$border var(--border-color);

  @include mixins.mq(md) {
    display: flex;
    justify-content: space-between;
    min-height: vars.$header-height;
  }
}

.site-nav,
.site-header,
.site-footer {
  width: 100%;

  @include mixins.mq(lg) {
    width: vars.$nav-width;
  }
}

.site-nav {
  display: none;

  &.nav-open {
    display: block;
  }

  @include mixins.mq(md) {
    display: block;
    padding-top: vars.$sp-8;
    padding-bottom: vars.$gutter-spacing-sm;
    overflow-y: auto;
    flex: 1 1 auto;
  }
}

.site-header {
  display: flex;
  min-height: vars.$header-height;
  align-items: center;

  @include mixins.mq(md) {
    height: vars.$header-height;
    max-height: vars.$header-height;
    border-bottom: vars.$border var(--border-color);
  }
}

.site-title {
  flex-grow: 1;
  display: flex;
  height: 100%;
  align-items: center;
  padding-top: vars.$sp-3;
  padding-bottom: vars.$sp-3;
  color: var(--body-heading-color);

  @include mixins.container;

  @include mixins.fs-6;

  @include mixins.mq(md) {
    padding-top: vars.$sp-2;
    padding-bottom: vars.$sp-2;
  }
}

@if meta.global-variable-exists(logo, $module: vars) {
  .site-logo {
    width: 100%;
    height: 100%;
    background-image: url(vars.$logo);
    background-repeat: no-repeat;
    background-position: left center;
    background-size: contain;
  }
}

.site-button {
  display: flex;
  height: 100%;
  padding: vars.$gutter-spacing-sm;
  align-items: center;
}

@include mixins.mq(md) {
  .site-header .site-button {
    display: none;
  }
}

.site-title:hover {
  background-image: linear-gradient(
    -90deg,
    var(--feedback-color) 0%,
    var(--feedback-color-lighter) 80%,
    transparent 100%
  );
}

.site-button:hover {
  background-image: linear-gradient(
    -90deg,
    var(--feedback-color) 0%,
    var(--feedback-color-lighter) 100%
  );
}

// stylelint-disable selector-max-type

body {
  position: relative;
  padding-bottom: vars.$sp-10;
  overflow-y: scroll;

  @include mixins.mq(md) {
    position: static;
    padding-bottom: 0;
  }
}

// stylelint-enable selector-max-type

.site-footer {
  position: absolute;
  bottom: 0;
  left: 0;
  padding-top: vars.$sp-4;
  padding-bottom: vars.$sp-4;
  color: vars.$grey-dk-000;

  @include mixins.container;

  @include mixins.fs-2;

  @include mixins.mq(md) {
    position: static;
    justify-self: end;
  }
}

.icon {
  width: vars.$sp-5;
  height: vars.$sp-5;
  color: var(--link-color);
}
