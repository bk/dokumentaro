// Main nav, breadcrumb, etc...
// stylelint-disable selector-no-type, max-nesting-depth, selector-max-compound-selectors, selector-max-type, selector-max-specificity
@use "mixins";
@use "vars";

.nav-list {
  padding: 0;
  margin-top: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-list-item {
    position: relative;
    margin: 0;

    @include mixins.fs-4;

    @include mixins.mq(md) {
      @include mixins.fs-3;
    }

    .nav-list-link {
      display: block;
      min-height: vars.$nav-list-item-height-sm;
      padding-top: vars.$sp-1;
      padding-bottom: vars.$sp-1;
      line-height: #{vars.$nav-list-item-height-sm - 2 * vars.$sp-1};
      @if vars.$nav-list-expander-right {
        padding-right: vars.$nav-list-item-height-sm;
        padding-left: vars.$gutter-spacing-sm;
      } @else {
        padding-right: vars.$gutter-spacing-sm;
        padding-left: vars.$nav-list-item-height-sm;
      }

      @include mixins.mq(md) {
        min-height: vars.$nav-list-item-height;
        line-height: #{vars.$nav-list-item-height - 2 * vars.$sp-1};
        @if vars.$nav-list-expander-right {
          padding-right: vars.$nav-list-item-height;
          padding-left: vars.$gutter-spacing;
        } @else {
          padding-right: vars.$gutter-spacing;
          padding-left: vars.$nav-list-item-height;
        }
      }

      &.external > svg {
        width: vars.$sp-4;
        height: vars.$sp-4;
        vertical-align: text-bottom;
      }

      &.active {
        font-weight: 600;
        text-decoration: none;
      }

      &:hover,
      &.active {
        background-image: linear-gradient(
          -90deg,
          var(--feedback-color) 0%,
          var(--feedback-color-lighter) 80%,
          transparent 100%
        );
      }
    }

    .nav-list-expander {
      position: absolute;
      @if vars.$nav-list-expander-right {
        right: 0;
      }

      width: vars.$nav-list-item-height-sm;
      height: vars.$nav-list-item-height-sm;
      padding: #{vars.$nav-list-item-height-sm * 0.25};
      color: var(--link-color);

      @include mixins.mq(md) {
        width: vars.$nav-list-item-height;
        height: vars.$nav-list-item-height;
        padding: #{vars.$nav-list-item-height * 0.25};
      }

      &:hover {
        background-image: linear-gradient(
          -90deg,
          var(--feedback-color) 0%,
          var(--feedback-color-lighter) 100%
        );
      }

      @if vars.$nav-list-expander-right {
        svg {
          transform: rotate(90deg);
        }
      }
    }

    > .nav-list {
      display: none;
      padding-left: vars.$sp-3;
      list-style: none;

      .nav-list-item {
        position: relative;

        .nav-list-link {
          color: var(--nav-child-link-color);
        }

        .nav-list-expander {
          color: var(--nav-child-link-color);
        }
      }
    }

    &.active {
      > .nav-list-expander svg {
        @if vars.$nav-list-expander-right {
          transform: rotate(-90deg);
        } @else {
          transform: rotate(90deg);
        }
      }

      > .nav-list {
        display: block;
      }
    }
  }
}

.nav-category {
  padding: vars.$sp-2 vars.$gutter-spacing-sm;
  font-weight: 600;
  text-align: start;
  text-transform: uppercase;
  border-bottom: vars.$border var(--border-color);
  @include mixins.fs-2;

  @include mixins.mq(md) {
    padding: vars.$sp-2 vars.$gutter-spacing;
    margin-top: vars.$gutter-spacing-sm;
    text-align: start;

    &:first-child {
      margin-top: 0;
    }
  }
}

.nav-list.nav-category-list {
  > .nav-list-item {
    margin: 0;

    > .nav-list {
      padding: 0;

      > .nav-list-item {
        > .nav-list-link {
          color: var(--link-color);
        }

        > .nav-list-expander {
          color: var(--link-color);
        }
      }
    }
  }
}

// Aux nav

.aux-nav {
  height: 100%;
  overflow-x: auto;
  @include mixins.fs-2;

  .aux-nav-list {
    display: flex;
    height: 100%;
    padding: 0;
    margin: 0;
    list-style: none;
    align-items: center;
    justify-content: space-evenly;
    @include mixins.mq(md) {
      height: vars.$header-height;
    }
  }

  .aux-nav-list-item {
    display: inline-block;
    height: 100%;
    padding: 0;
    margin: 0;
    a {
      padding: 1.2rem 1rem;
    }
  }

  @include mixins.mq(md) {
    padding-right: vars.$gutter-spacing-sm;
  }
}

// Breadcrumb nav

.breadcrumb-nav {
  @include mixins.mq(md) {
    margin-top: -#{vars.$sp-4};
  }
}

.breadcrumb-nav-list {
  padding-left: 0;
  margin-bottom: vars.$sp-3;
  list-style: none;
}

.breadcrumb-nav-list-item {
  display: table-cell;
  @include mixins.fs-2;

  &::before {
    display: none;
  }

  &::after {
    display: inline-block;
    margin-right: vars.$sp-2;
    margin-left: vars.$sp-2;
    color: vars.$grey-dk-000;
    content: "/";
  }

  &:last-child {
    &::after {
      content: "";
    }
  }
}

// Color scheme switcher

.color-switcher {
  height: 100%;
  overflow-x: auto;
  display: flex;
  justify-content: center;
  align-items: center;
  a:hover svg.icon {
    color: var(--body-text-color);
  }
  svg {
    margin: 0 5px;
    height: 20px;
    width: 20px;
  }
  @include mixins.mq(md) {
    height: vars.$header-height;
  }
}
